use ActsDB

db.Books.insertOne({ref_no:1001,name:"Python",author:"Shyam",co_author:"Rakesh",pages:350,price:450});

db.Books.insertMany([{ref_no:1002,name:"Java",author:"Amrita",pages:300,price:500},{ref_no:1003,name:"Html",author:"Amita",co_author:"Shyam",pages:225,price:300},{ref_no:1004,name:"MongoDB",author:"Swapnil",pages:440,price:550},{ref_no:1005,name:"MySql",author:"Shrikant",coauthor:"Nitin",pages:330,price:630}]);

//Count how many books wrote by Amita
db.Books.find({author:"Amita"}).count();

//Count total books written by Shyam
db.Books.find({author:"Shyam"}).count();

//How many authors books are available in library
db.Books.find().count();

//find avg cost of books in library
//Id is required for group specification
db.Books.aggregate(
    [
        {
            $group:
            {
                "_id":"_id",
                AverageBooksCost: {$avg: "$price"}
            }
        }
    ]
)

//find total number of pages of books authored by Shyam
db.Books.aggregate(
    [
        {
            $group:
            {
                _id:"_id",
                SumOfBooksPages: {$sum: "$pages"}
            }
        }
    ]
)

//Sort the books by descending order of pages

//change the id of book 'MongoDB' to 1014
db.Books.update({name:"MongoDB"},{$set:{ref_no:1014}})

//find total books where cost is above 400
db.Books.find({price:{$gt:400}});

//delete the co-author of book 'mysql'
db.Books.delete({name:"MySql"})